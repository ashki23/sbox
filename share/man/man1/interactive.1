.TH SBOX "1" "August 2021" "SBOX 1.2"
.SH NAME
interactive \- an alias for using cluster interactively
.SH SYNOPSIS
interactive [-h] [-a] [-n] [-N] [-p] [-t] [-k] [-e] [-E] [-l] [-m] [-g] [{jupyter}]
.br
.SH DESCRIPTION
.PP
interactive is an alias for using cluster interactively using
Slurm srun and sbatch commands.
The interactive jupyter provides a JupyterLab interface for
using scientific software including Python, R, Julia, and their
libraries.
The command submits a batch file by sbatch command and runs a
Jupyter server on the cluster.
Multiple kernels and environments can be applied to use different
software and packages in JupyterLab.
.SH COMMAND LINE OPTIONS
.TP
.B -h, --help
Show this help message and exit.
.TP
.B -a, --account
Slurm account name or project ID.
.TP
.B -n, --ntasks
Number of tasks (cpus).
.TP
.B -N, --nodes
Number of nodes.
.TP
.B -p, --partition
Partition name.
.TP
.B -t, --time
Number of hours based on the partitions timelimit.
.TP
.B -l, --license
Add a license to an interactive session.
.TP
.B -m, --mem
Amount of memory (per GB).
.TP
.B -g, --gpu
Number of gpus.
.TP
.B -k, --kernel
Jupyter kernel for python, r, julia.
The default kernel is python.
.TP
.B -e, --environment
Virtual environment(s) for a JupyterLab
session.
.TP
.B -E, --myenv
Path to a local virtual environment.
The local virtual envs should contain JupyterLab.
.PP
Examples
.PP
Using the cluster interactively:
.IP
.nf
[user\[at]lewis4-r630-login-node675 \[ti]]$ interactive
Logging into Interactive partition with 2G memory, 1 cpu for 2 hours ... 
[user\[at]lewis4-r7425-htc5-node835 \[ti]]$ 
.fi
.PP
Using the cluster interactively with more time and resources:
.IP
.nf
[user\[at]lewis4-r630-login-node675 \[ti]]$ interactive --mem 16 -n 6 -t 4
Logging into Interactive partition with 16G memory, 6 cpu for 4 hours ... 
[user\[at]lewis4-r7425-htc5-node835 \[ti]]$
.fi
.PP
Using the cluster interactively with a license:
.IP
.nf
[user\[at]lewis4-r630-login-node675 \[ti]]$ interactive --mem 16 -n 6 -t 4 -l matlab
Logging into Interactive partition with 16G memory, 6 cpu for 4 hours with a matlab license ... 
[user\[at]lewis4-r7425-htc5-node835 \[ti]]$
.fi
.PP
Using a Gpu interactively:
.IP
.nf
[user\[at]lewis4-r630-login-node675 \[ti]]$ interactive -p Gpu
Logging into Gpu partition with 1 gpu, 2G memory, 1 cpu for 2 hours ... 
[user\[at]lewis4-r730-gpu3-node431 \[ti]]$
.fi
.PP
Using JupyterLab:
.IP
.nf
[user\[at]lewis4-r630-login-node675 \[ti]]$ interactive jupyter
Logging into Lewis partition with 2G memory, 1 cpu for 2 hours ...
Starting Jupyter server (it might take about a couple minutes) ...
Starting Jupyter server ...
Starting Jupyter server ...
Jupyter Notebook is running.
Open a new terminal in your local computer and run:
ssh -NL 8888:lewis4-r630-hpc4-node303:8888 user\[at]lewis.rnet.missouri.edu
After that open a browser and go:
http://127.0.0.1:8888/?token=9e223bd179d228e0e334f8f4a85dfd904eebd0ab9ded7e55
To stop the server run the following on the cluster:
scancel 23150533
.fi
.PP
Using JupyterLab with R kernel:
.IP
.nf
[user\[at]lewis4-r630-login-node675 \[ti]]$ interactive jupyter -k r
Logging into Lewis partition with 2G memory, 1 cpu for 2 hours ...
Starting Jupyter server (it might take about a couple minutes) ...
Starting Jupyter server ...
Starting Jupyter server ...
\&...
.fi
.PP
Using TensorFlow on JupyterLab by a different account and on a partition
with 16 GB memory for 8 hours:
.IP
.nf
[user\[at]lewis4-r630-login-node675 \[ti]]$ interactive jupyter -a general-gpu -p gpu3 --mem 16 -t 8 -e tensorflow
Logging into gpu3 partition with 1 gpu, 16G memory, 1 cpu for 8 hours with account general-gpu ...
Starting Jupyter server (it might take about a couple minutes) ...
Starting Jupyter server ...
Starting Jupyter server ...
\&...
.fi
.PP
Note: Users can install other packages and mix local packages
with the premade environments.
For example, for Python:
.IP
.nf
pip install --target </path/my-packages/lib/> <pkg-name>
export PYTHONPATH=</path/my-packages/lib/>:$PYTHONPATH
.fi
.PP
For R, run the following in R:
.IP
.nf
dir.create(\[dq]<your/path/for/R/version>\[dq])
install.packages(\[dq]<pkg-name>\[dq], repos = \[dq]http://cran.us.r-project.org\[dq], lib = \[dq]<your/path/for/R/version>\[dq])
\&.libPaths(\[dq]<your/path/for/R/version>\[dq])
.fi
.PP
Using a local virtual environment:
.IP
.nf
[user\[at]lewis4-r630-login-node675 \[ti]]$ interactive jupyter -E </path/to/local/env>
Logging into Lewis partition with 2G memory, 1 cpu for 2 hours ...
Starting Jupyter server (it might take about a couple minutes) ...
Starting Jupyter server ...
.fi
.PP
Note: The local environments must include
jupyterlab.
For R environments, they must also contain r-irkernel.
For instance:
.IP
.nf
conda create -p </path/to/local/env> -c conda-forge r-base jupyterlab r-irkernel
.fi
.SH AUTHOR
Ashkan Mirzaee: https://ashki23.github.io/
.SH INTERNET RESOURCES
.br
Documentation:  https://sbox.readthedocs.io/
.br
Downloads:  https://github.com/ashki23/sbox/releases/latest
.br
Module repository:  https://github.com/ashki23/sbox
.SH LICENSING
Sbox is distributed under an Open Source license. See the file
"LICENSE" in the source distribution for information on terms &
conditions for accessing and otherwise using Sbox and for a
DISCLAIMER OF ALL WARRANTIES.
