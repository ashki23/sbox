#!/usr/bin/python3
# =============================================================================
# Author: Ashkan Mirzaee
# License: GPL-3.0
# Date: 2021/07/09
# Source: https://github.com/ashki23/stool
# =============================================================================

import os
import argparse

parser = argparse.ArgumentParser(description = 'Starting Jupyter server on the cluster', formatter_class = lambda prog: argparse.HelpFormatter(prog,max_help_position = 56), epilog = 'Command should be run from the login node.')
parser.add_argument('-A', '--account', default = 'general', help = 'account name', metavar = '')
parser.add_argument('-n', '--ntasks', type = int, default = 1, help = 'number of tasks (cpus)', metavar = '')
parser.add_argument('-p', '--partition', default = 'Lewis', help = 'partition name', metavar = '')
parser.add_argument('-t', '--time', type = int, choices = [1,2,3,4,5,6,7,8], default = 2, help = 'number of hours (up to 8)', metavar = '')
parser.add_argument('--mem', default = '4G', help = 'number of memory', metavar = '')
parser.add_argument('--gres', default = 'gpu:0', help = 'generic resources (gpus)', metavar = '')
args = parser.parse_args()

host_name = os.popen('hostname').read().strip()

if 'login' in host_name:
    user_name = os.getenv('USER')
    os.system(f"install -d /home/{user_name}/.jupyter/job")
    
    with open(f"/home/{user_name}/.jupyter/job/jupyter-job",'w') as jb:
        jb.write(f"""#!/bin/bash

#SBATCH --job-name jupyter
#SBATCH --account {args.account}
#SBATCH --partition {args.partition}
#SBATCH --ntasks {args.ntasks}
#SBATCH --mem {args.mem}
#SBATCH --gres {args.gres}
#SBATCH --time {args.time}:00:00
#SBATCH --output /home/{user_name}/.jupyter/job/py-%j.out

module load anaconda
jupyter-lab --no-browser --ip 0.0.0.0
        """)
    
    os.system(f"""
cd /home/{user_name}/
rm -f /home/{user_name}/.jupyter/job/py-*.out
jid=$(sbatch --parsable /home/{user_name}/.jupyter/job/jupyter-job)
echo "Starting Jupyter server (it might take about a couple minutes) ..."
while ! grep -iq 'use control-c' /home/{user_name}/.jupyter/job/py-$jid.out > /dev/null 2>&1; do
sleep 10
echo "Starting Jupyter server ..."
done
unset jid
cd - > /dev/null 2>&1
    """)

    jid = os.popen("ls -t /home/%s/.jupyter/job/py-*.out | head -n 1 | grep -Po '(?<=job/py-).*(?=.out)'" % user_name).read().strip()
    port = os.popen("cat /home/%s/.jupyter/job/py-%s.out | grep '\[.*\].http://' | grep -Po '(?<=http://).*' | grep -Po '(?<=:)\d{4}(?=/?)'" % (user_name,jid)).read().strip()
    host = os.popen(f"cat /home/{user_name}/.jupyter/job/py-{jid}.out | grep '\[.*\].http://' | grep -Po '(?<=http://).*' | grep -Po '.*(?=:)'").read().strip()
    url = os.popen(f"cat /home/{user_name}/.jupyter/job/py-{jid}.out | grep '\[.*\].*or.*http://' | grep -Po '(?<=or ).*'").read().strip()
    
    print(f"""
Jupyter Notebook is running.\n
Open a new terminal in your local computer and run:
ssh -NL {port}:{host}:{port} {user_name}@lewis.rnet.missouri.edu

After that open a browser and go:
{url}

To stop the server run the following on the cluster:
scancel {jid}
    """)

else:
    print('Command should be run from the login node.')
